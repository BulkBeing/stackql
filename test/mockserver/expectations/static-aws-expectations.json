[
  {
    "httpRequest": {
      "method": "GET",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=host;x-amz-date.*$" ]
      },
      "queryStringParameters": { 
        "Action": [ "^DescribeVolumes$" ],
        "Version": [ "^2016\\-11\\-15$" ] 
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "text/xml" ]
      },
      "statusCode": 200,
      "body": {
        "type": "BINARY",
        "base64Bytes": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPERlc2NyaWJlVm9sdW1lc1Jlc3BvbnNlIHhtbG5zPSJodHRwOi8vZWMyLmFtYXpvbmF3cy5jb20vZG9jLzIwMTYtMTEtMTUvIj4KICAgIDxyZXF1ZXN0SWQ+NmI1ZTA0NzQtMDQyYi00NWQ2LWFkYWMtMDRiMGFmZjlhYjEwPC9yZXF1ZXN0SWQ+CiAgICA8dm9sdW1lU2V0PgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dm9sdW1lSWQ+dm9sLTAwMTAwMDAwMDAwMDAwMDAwPC92b2x1bWVJZD4KICAgICAgICAgICAgPHNpemU+MTA8L3NpemU+CiAgICAgICAgICAgIDxzbmFwc2hvdElkLz4KICAgICAgICAgICAgPGF2YWlsYWJpbGl0eVpvbmU+YXAtc291dGhlYXN0LTFhPC9hdmFpbGFiaWxpdHlab25lPgogICAgICAgICAgICA8c3RhdHVzPmF2YWlsYWJsZTwvc3RhdHVzPgogICAgICAgICAgICA8Y3JlYXRlVGltZT4yMDIyLTA1LTAyVDIzOjA5OjMwLjE3MVo8L2NyZWF0ZVRpbWU+CiAgICAgICAgICAgIDxhdHRhY2htZW50U2V0Lz4KICAgICAgICAgICAgPHZvbHVtZVR5cGU+Z3AyPC92b2x1bWVUeXBlPgogICAgICAgICAgICA8aW9wcz4xMDA8L2lvcHM+CiAgICAgICAgICAgIDxlbmNyeXB0ZWQ+ZmFsc2U8L2VuY3J5cHRlZD4KICAgICAgICAgICAgPG11bHRpQXR0YWNoRW5hYmxlZD5mYWxzZTwvbXVsdGlBdHRhY2hFbmFibGVkPgogICAgICAgIDwvaXRlbT4KICAgICAgICA8aXRlbT4KICAgICAgICAgICAgPHZvbHVtZUlkPnZvbC0wMDIwMDAwMDAwMDAwMDAwMDwvdm9sdW1lSWQ+CiAgICAgICAgICAgIDxzaXplPjg8L3NpemU+CiAgICAgICAgICAgIDxzbmFwc2hvdElkLz4KICAgICAgICAgICAgPGF2YWlsYWJpbGl0eVpvbmU+YXAtc291dGhlYXN0LTFhPC9hdmFpbGFiaWxpdHlab25lPgogICAgICAgICAgICA8c3RhdHVzPmF2YWlsYWJsZTwvc3RhdHVzPgogICAgICAgICAgICA8Y3JlYXRlVGltZT4yMDIyLTA1LTExVDA0OjQ1OjQwLjYyN1o8L2NyZWF0ZVRpbWU+CiAgICAgICAgICAgIDxhdHRhY2htZW50U2V0Lz4KICAgICAgICAgICAgPHZvbHVtZVR5cGU+Z3AyPC92b2x1bWVUeXBlPgogICAgICAgICAgICA8aW9wcz4xMDA8L2lvcHM+CiAgICAgICAgICAgIDxlbmNyeXB0ZWQ+ZmFsc2U8L2VuY3J5cHRlZD4KICAgICAgICAgICAgPG11bHRpQXR0YWNoRW5hYmxlZD5mYWxzZTwvbXVsdGlBdHRhY2hFbmFibGVkPgogICAgICAgIDwvaXRlbT4KICAgIDwvdm9sdW1lU2V0Pgo8L0Rlc2NyaWJlVm9sdW1lc1Jlc3BvbnNlPg=="
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=accept;content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.ListResources" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName":"AWS::EC2::VPC"
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ResourceDescriptions": [
          {
            "Identifier": "vpc-0001", 
            "Properties": "{\"VpcId\":\"vpc-0001\"}"
          },
          {
            "Identifier": "vpc-0002",
            "Properties": "{\"VpcId\":\"vpc-0002\"}"
          },
          {
            "Identifier": "vpc-0003",
            "Properties": "{\"VpcId\":\"vpc-0003\"}"
          },
          {
            "Identifier": "vpc-0004",
            "Properties": "{\"VpcId\":\"vpc-0004\"}"
          },
          {
            "Identifier": "vpc-0005",
            "Properties": "{\"VpcId\":\"vpc-0005\"}"
          }
        ],
        "TypeName":"AWS::EC2::VPC"
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.GetResource" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName":"AWS::EC2::VPC",
          "Identifier": "CloudControlExample"
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ResourceDescription": {
          "Identifier": "CloudControlExample",
          "Properties": "{\"RetentionInDays\":90,\"LogGroupName\":\"CloudControlExample\",\"Arn\":\"arn:aws:logs:ap-southeast-1:0000000001:log-group:CloudControlExample:*\"}"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=accept;content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.ListResourceRequests" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "ResourceRequestStatusFilter": {}
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponseTemplate": {
      "template": "#set($end = 2)\n#set($rb = $request.body.json)\n#set($rr = $rb.replaceAll('^.*NextToken\\D*(\\d+)?.*$|^.*()$', '$1'))\n#set($rn = $rr)\n#set($maxItems = 8)\n#set($thisCursor = \"#if (${rn})${rn}#{else}0#end\")\n#set($Integer = 0)\n#set($currentCursor = $Integer.parseInt($thisCursor))\n#set($nextCursor = $currentCursor + 1)\n#set($cFinal = ($currentCursor * 1) + $end + 1)\n{ 'statusCode': 200, 'headers': { 'Content-Type': [ 'application/x-amz-json-1.0' ] }, 'body': { #if($currentCursor < $maxItems) \"NextToken\": '$nextCursor', #end  \"ResourceRequestStatusSummaries\": [       #if($currentCursor < $maxItems)  \n#foreach($i in [1..$end])  \n#set($ci = $currentCursor * 1 + $i)\n     {      \"EventTime\": 1660714274.285,      \"Identifier\": \"LogGroupResourceExampleThird$ci\",      \"Operation\": \"CREATE\",      \"OperationStatus\": \"SUCCESS\",      \"RequestToken\": \"5ae5ae5a-0001-0001-001a-$ci\",      \"TypeName\": \"AWS::Logs::LogGroup\"    },    {      \"EventTime\": 1660709766.092,      \"Identifier\": \"LogGroupResourceExampleSecond$ci\",      \"Operation\": \"CREATE\",      \"OperationStatus\": \"SUCCESS\",      \"RequestToken\": \"5ae5ae5a-0002-0001-001a-$ci\",      \"TypeName\": \"AWS::Logs::LogGroup\"    },    {      \"EventTime\": 1660266055.925,      \"Identifier\": \"CloudControlExample$ci\",      \"Operation\": \"CREATE\",      \"OperationStatus\": \"SUCCESS\",      \"RequestToken\": \"5ae5ae5a-0003-0001-001a-$ci\",      \"TypeName\": \"AWS::Logs::LogGroup\"    },    {      \"ErrorCode\": \"InvalidRequest\",      \"EventTime\": 1660709730.739,      \"OperationStatus\": \"FAILED\",      \"RequestToken\": \"5ae5ae5a-0004-0001-001a-$ci\",      \"StatusMessage\": \"Model validation failed (#/RetentionInDays: #: only 1 subschema matches out of 2\n#/RetentionInDays: failed validation constraint for keyword [enum])\",      \"TypeName\": \"AWS::Logs::LogGroup\"    }, #end              {      \"EventTime\": 1660709644.835,      \"Identifier\": \"LogGroupResourceExample$cFinal\",      \"Operation\": \"CREATE\",      \"OperationStatus\": \"SUCCESS\",      \"RequestToken\": \"5ae5ae5a-0005-0001-001a-$cFinal\",      \"TypeName\": \"AWS::Logs::LogGroup\"    }     #{else}#end      ], \"rb\": $rb          }        }      }    }  }  } }",
      "templateType": "VELOCITY"
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.CreateResource" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName": "AWS::Logs::LogGroup"
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ProgressEvent":{
          "EventTime": 1.6607142738E9,
          "Identifier": "LogGroupResourceExampleThird",
          "Operation": "CREATE",
          "OperationStatus": "IN_PROGRESS",
          "RequestToken": "5ae9f962-8720-4a21-992e-1598cf5db273",
          "TypeName": "AWS::Logs::LogGroup"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.UpdateResource" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName": "AWS::Logs::LogGroup",
          "Identifier": "LogGroupResourceExampleThird" 
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ProgressEvent":{
          "EventTime": 1.6607142738E9,
          "Identifier": "LogGroupResourceExampleThird",
          "Operation": "UPDATE",
          "OperationStatus": "IN_PROGRESS",
          "RequestToken": "5ae9f962-8720-4a21-992e-1598cf5db273",
          "TypeName": "AWS::Logs::LogGroup"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.DeleteResource" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "TypeName": "AWS::Logs::LogGroup",
          "Identifier": "LogGroupResourceExampleThird" 
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ProgressEvent":{
          "EventTime": 1.6607142738E9,
          "Identifier": "LogGroupResourceExampleThird",
          "Operation": "DELETE",
          "OperationStatus": "IN_PROGRESS",
          "RequestToken": "5ae9f962-8720-4a21-992e-1598cf5db273",
          "TypeName": "AWS::Logs::LogGroup"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.CancelResourceRequest" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "RequestToken": "abc001" 
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ProgressEvent":{
          "EventTime": 1.6607142738E9,
          "Identifier": "LogGroupResourceExampleThird",
          "Operation": "DELETE",
          "OperationStatus": "IN_PROGRESS",
          "RequestToken": "5ae9f962-8720-4a21-992e-1598cf5db273",
          "TypeName": "AWS::Logs::LogGroup"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "POST",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=.*content-type;host;x-amz-date;x-amz-target.*$" ],
        "X-Amz-Target": [ "CloudApiService.GetResourceRequestStatus" ]
      },
      "body": {
        "type": "JSON",
        "json": {
          "RequestToken": "abc001" 
        },
        "matchType": "ONLY_MATCHING_FIELDS"
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "application/x-amz-json-1.0" ]
      },
      "statusCode": 200,
      "body": {
        "ProgressEvent":{
          "EventTime": 1.6607142738E9,
          "Identifier": "LogGroupResourceExampleThird",
          "Operation": "DELETE",
          "OperationStatus": "IN_PROGRESS",
          "RequestToken": "abc001",
          "TypeName": "AWS::Logs::LogGroup"
        }
      }
    }
  },
  {
    "httpRequest": {
      "method": "GET",
      "path": "/",
      "headers": {
        "Authorization": ["^.*SignedHeaders=host;x-amz-date.*$" ]
      },
      "queryStringParameters": { 
        "Action": [ "^CreateVolume$" ],
        "Version": [ "^2016\\-11\\-15$" ],
        "Size": ["^10$"],
        "TagSpecification.1.ResourceType": [ "volume" ],
        "TagSpecification.1.Tag.1.Key": [ "stack" ],
        "TagSpecification.1.Tag.1.Value": [ "production" ],
        "TagSpecification.1.Tag.2.Key": [ "name" ],
        "TagSpecification.1.Tag.2.Value": [ "multi-tag-volume" ]
      }
    },
    "httpResponse": {
      "headers": {
        "content-type": [ "text/xml" ]
      },
      "statusCode": 200,
      "body": {
        "type": "BINARY",
        "base64Bytes": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPENyZWF0ZVZvbHVtZVJlc3BvbnNlIHhtbG5zPSJodHRwOi8vZWMyLmFtYXpvbmF3cy5jb20vZG9jLzIwMTYtMTEtMTUvIj4KICA8cmVxdWVzdElkPjFhMGZkODUyLWUwMWItNGY5Ni04Y2Y2LTRhZTRhZWVkMzdiMTwvcmVxdWVzdElkPgogIDx2b2x1bWVJZD52b2wtMDMyNjg5NWJlZDBmMzhlYTg8L3ZvbHVtZUlkPgogIDxzaXplPjEwPC9zaXplPgogIDxzbmFwc2hvdElkPjwvc25hcHNob3RJZD4KICA8YXZhaWxhYmlsaXR5Wm9uZT5hcC1zb3V0aGVhc3QtMWE8L2F2YWlsYWJpbGl0eVpvbmU+CiAgPHN0YXR1cz5jcmVhdGluZzwvc3RhdHVzPgogIDxjcmVhdGVUaW1lPjIwMjItMDYtMjBUMTM6MTE6MjMuMDAwWjwvY3JlYXRlVGltZT4KICA8dm9sdW1lVHlwZT5ncDI8L3ZvbHVtZVR5cGU+CiAgPGlvcHM+MTAwPC9pb3BzPgogIDxlbmNyeXB0ZWQ+ZmFsc2U8L2VuY3J5cHRlZD4KICA8dGFnU2V0Lz4KICA8bXVsdGlBdHRhY2hFbmFibGVkPmZhbHNlPC9tdWx0aUF0dGFjaEVuYWJsZWQ+CjwvQ3JlYXRlVm9sdW1lUmVzcG9uc2U+"
      }
    }
  }
]