<<<jsonnet
{
   projectId: << projectId >>,
   zone: << zone >>,
   data__cluster:    {
   addonsConfig: << addonsConfig >>,
   authenticatorGroupsConfig: << authenticatorGroupsConfig >>,
   autopilot: << autopilot >>,
   autoscaling: << autoscaling >>,
   binaryAuthorization: << binaryAuthorization >>,
   clusterIpv4Cidr: << clusterIpv4Cidr >>,
   conditions: [ << conditions[0] >> ],
   confidentialNodes: << confidentialNodes >>,
   createTime: << createTime >>,
   currentMasterVersion: << currentMasterVersion >>,
   currentNodeCount: << currentNodeCount >>,
   currentNodeVersion: << currentNodeVersion >>,
   databaseEncryption: << databaseEncryption >>,
   defaultMaxPodsConstraint: << defaultMaxPodsConstraint >>,
   description: << description >>,
   enableKubernetesAlpha: << enableKubernetesAlpha >>,
   enableTpu: << enableTpu >>,
   endpoint: << endpoint >>,
   expireTime: << expireTime >>,
   id: << id >>,
   initialClusterVersion: << initialClusterVersion >>,
   initialNodeCount: << initialNodeCount >>,
   instanceGroupUrls: [ << instanceGroupUrls[0] >> ],
   ipAllocationPolicy: << ipAllocationPolicy >>,
   labelFingerprint: << labelFingerprint >>,
   legacyAbac: << legacyAbac >>,
   location: << location >>,
   locations: [ << locations[0] >> ],
   loggingConfig: << loggingConfig >>,
   loggingService: << loggingService >>,
   maintenancePolicy: << maintenancePolicy >>,
   masterAuth: << masterAuth >>,
   masterAuthorizedNetworksConfig: << masterAuthorizedNetworksConfig >>,
   meshCertificates: << meshCertificates >>,
   monitoringConfig: << monitoringConfig >>,
   monitoringService: << monitoringService >>,
   name: << name >>,
   network: << network >>,
   networkConfig: << networkConfig >>,
   networkPolicy: << networkPolicy >>,
   nodeConfig: << nodeConfig >>,
   nodeIpv4CidrSize: << nodeIpv4CidrSize >>,
   nodePoolDefaults: << nodePoolDefaults >>,
   nodePools: [ << nodePools[0] >> ],
   notificationConfig: << notificationConfig >>,
   privateClusterConfig: << privateClusterConfig >>,
   releaseChannel: << releaseChannel >>,
   resourceLabels: {
     << resourceLabels[0].key >>: << resourceLabels[0].val >>
     },
   resourceUsageExportConfig: << resourceUsageExportConfig >>,
   selfLink: << selfLink >>,
   servicesIpv4Cidr: << servicesIpv4Cidr >>,
   shieldedNodes: << shieldedNodes >>,
   status: << status >>,
   statusMessage: << statusMessage >>,
   subnetwork: << subnetwork >>,
   tpuIpv4CidrBlock: << tpuIpv4CidrBlock >>,
   verticalPodAutoscaling: << verticalPodAutoscaling >>,
   workloadIdentityConfig: << workloadIdentityConfig >>,
   zone: << zone >>
   },
   data__parent:    << data__parent >>,
   data__projectId:    << data__projectId >>,
   data__zone:    << data__zone >>
}
>>>
INSERT INTO google.container.projects.zones.clusters(
  projectId,
  zone,
  data__cluster,
  data__parent,
  data__projectId,
  data__zone
)
SELECT
  '{{ .values.projectId }}',
  '{{ .values.zone }}',
  '{ "addonsConfig": "{{ .values.data__cluster.addonsConfig }}", "authenticatorGroupsConfig": "{{ .values.data__cluster.authenticatorGroupsConfig }}", "autopilot": "{{ .values.data__cluster.autopilot }}", "autoscaling": "{{ .values.data__cluster.autoscaling }}", "binaryAuthorization": "{{ .values.data__cluster.binaryAuthorization }}", "clusterIpv4Cidr": "{{ .values.data__cluster.clusterIpv4Cidr }}", "conditions": [ "{{ .values.data__cluster.conditions[0] }}" ], "confidentialNodes": "{{ .values.data__cluster.confidentialNodes }}", "createTime": "{{ .values.data__cluster.createTime }}", "currentMasterVersion": "{{ .values.data__cluster.currentMasterVersion }}", "currentNodeCount": {{ .values.data__cluster.currentNodeCount }}, "currentNodeVersion": "{{ .values.data__cluster.currentNodeVersion }}", "databaseEncryption": "{{ .values.data__cluster.databaseEncryption }}", "defaultMaxPodsConstraint": "{{ .values.data__cluster.defaultMaxPodsConstraint }}", "description": "{{ .values.data__cluster.description }}", "enableKubernetesAlpha": {{ .values.data__cluster.enableKubernetesAlpha }}, "enableTpu": {{ .values.data__cluster.enableTpu }}, "endpoint": "{{ .values.data__cluster.endpoint }}", "expireTime": "{{ .values.data__cluster.expireTime }}", "id": "{{ .values.data__cluster.id }}", "initialClusterVersion": "{{ .values.data__cluster.initialClusterVersion }}", "initialNodeCount": {{ .values.data__cluster.initialNodeCount }}, "instanceGroupUrls": [ "{{ .values.data__cluster.instanceGroupUrls[0] }}" ], "ipAllocationPolicy": "{{ .values.data__cluster.ipAllocationPolicy }}", "labelFingerprint": "{{ .values.data__cluster.labelFingerprint }}", "legacyAbac": "{{ .values.data__cluster.legacyAbac }}", "location": "{{ .values.data__cluster.location }}", "locations": [ "{{ .values.data__cluster.locations[0] }}" ], "loggingConfig": "{{ .values.data__cluster.loggingConfig }}", "loggingService": "{{ .values.data__cluster.loggingService }}", "maintenancePolicy": "{{ .values.data__cluster.maintenancePolicy }}", "masterAuth": "{{ .values.data__cluster.masterAuth }}", "masterAuthorizedNetworksConfig": "{{ .values.data__cluster.masterAuthorizedNetworksConfig }}", "meshCertificates": "{{ .values.data__cluster.meshCertificates }}", "monitoringConfig": "{{ .values.data__cluster.monitoringConfig }}", "monitoringService": "{{ .values.data__cluster.monitoringService }}", "name": "{{ .values.data__cluster.name }}", "network": "{{ .values.data__cluster.network }}", "networkConfig": "{{ .values.data__cluster.networkConfig }}", "networkPolicy": "{{ .values.data__cluster.networkPolicy }}", "nodeConfig": "{{ .values.data__cluster.nodeConfig }}", "nodeIpv4CidrSize": {{ .values.data__cluster.nodeIpv4CidrSize }}, "nodePoolDefaults": "{{ .values.data__cluster.nodePoolDefaults }}", "nodePools": [ "{{ .values.data__cluster.nodePools[0] }}" ], "notificationConfig": "{{ .values.data__cluster.notificationConfig }}", "privateClusterConfig": "{{ .values.data__cluster.privateClusterConfig }}", "releaseChannel": "{{ .values.data__cluster.releaseChannel }}", "resourceLabels": { "{{ .values.data__cluster.resourceLabels[0].key }}": "{{ .values.data__cluster.resourceLabels[0].val }}" }, "resourceUsageExportConfig": "{{ .values.data__cluster.resourceUsageExportConfig }}", "selfLink": "{{ .values.data__cluster.selfLink }}", "servicesIpv4Cidr": "{{ .values.data__cluster.servicesIpv4Cidr }}", "shieldedNodes": "{{ .values.data__cluster.shieldedNodes }}", "status": "{{ .values.data__cluster.status }}", "statusMessage": "{{ .values.data__cluster.statusMessage }}", "subnetwork": "{{ .values.data__cluster.subnetwork }}", "tpuIpv4CidrBlock": "{{ .values.data__cluster.tpuIpv4CidrBlock }}", "verticalPodAutoscaling": "{{ .values.data__cluster.verticalPodAutoscaling }}", "workloadIdentityConfig": "{{ .values.data__cluster.workloadIdentityConfig }}", "zone": "{{ .values.data__cluster.zone }}" }',
  '{{ .values.data__parent }}',
  '{{ .values.data__projectId }}',
  '{{ .values.data__zone }}'
;