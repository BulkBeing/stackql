version: "3.9"
   
services:
  mockserver:
    image: stackql/integration
    build:
      context: .
      cache_from:
        - stackql/integration
      target: integration
    volumes:
      - ./vol/srv/credentials:/opt/stackql/srv/credentials:rw
    environment:
      - MOCKSERVER_PORT_GOOGLE=${MOCKSERVER_PORT_GOOGLE:-1080}
      - MOCKSERVER_PORT_OKTA=${MOCKSERVER_PORT_OKTA:-1090}
      - MOCKSERVER_PORT_AWS=${MOCKSERVER_PORT_AWS:-1091}
      - MOCKSERVER_PORT_K8S=${MOCKSERVER_PORT_K8S:-1092}
      - MOCKSERVER_PORT_GITHUB=${MOCKSERVER_PORT_GITHUB:-1093}
      - MOCKSERVER_PORT_REGISTRY=${MOCKSERVER_PORT_REGISTRY:-1094}
      - MOCKSERVER_PORT_AZURE=${MOCKSERVER_PORT_AZURE:-1095}
      - MOCKSERVER_PORT_SUMOLOGIC=${MOCKSERVER_PORT_SUMOLOGIC:-1096}
    ports:
      - "${MOCKSERVER_PORT_GOOGLE:-1080}:${MOCKSERVER_PORT_GOOGLE:-1080}/tcp"
      - "${MOCKSERVER_PORT_OKTA:-1090}:${MOCKSERVER_PORT_OKTA:-1090}/tcp"
      - "${MOCKSERVER_PORT_AWS:-1091}:${MOCKSERVER_PORT_AWS:-1091}/tcp"
      - "${MOCKSERVER_PORT_K8S:-1092}:${MOCKSERVER_PORT_K8S:-1092}/tcp"
      - "${MOCKSERVER_PORT_GITHUB:-1093}:${MOCKSERVER_PORT_GITHUB:-1093}/tcp"
      - "${MOCKSERVER_PORT_REGISTRY:-1094}:${MOCKSERVER_PORT_REGISTRY:-1094}/tcp"
      - "${MOCKSERVER_PORT_AZURE:-1095}:${MOCKSERVER_PORT_AZURE:-1095}/tcp"
      - "${MOCKSERVER_PORT_SUMOLOGIC:-1096}:${MOCKSERVER_PORT_SUMOLOGIC:-1096}/tcp"
    command: 
      - bash
      - -c
      - |
        MOCKSERVER_JAR='/opt/test/stackql/test/downloads/mockserver-netty-5.12.0-shaded.jar'
        JSON_INIT_FILE_DIR='/opt/test/stackql/test/mockserver/expectations'
        java    -Dfile.encoding=UTF-8 \
          -Dmockserver.initializationJsonPath=$${JSON_INIT_FILE_DIR}/static-gcp-expectations.json \
          -Dmockserver.logLevel=OFF \
          -Droot.logLevel=OFF \
          -jar    $${MOCKSERVER_JAR} \
          -serverPort    $${MOCKSERVER_PORT_GOOGLE}&
        java    -Dfile.encoding=UTF-8 \
          -Dmockserver.initializationJsonPath=$${JSON_INIT_FILE_DIR}/static-github-expectations.json \
          -Dmockserver.logLevel=OFF \
          -Droot.logLevel=OFF \
          -jar    $${MOCKSERVER_JAR} \
          -serverPort    $${MOCKSERVER_PORT_GITHUB}&
        java    -Dfile.encoding=UTF-8 \
          -Dmockserver.initializationJsonPath=$${JSON_INIT_FILE_DIR}/static-aws-expectations.json \
          -Dmockserver.logLevel=OFF \
          -Droot.logLevel=OFF \
          -jar    $${MOCKSERVER_JAR} \
          -serverPort    $${MOCKSERVER_PORT_AWS}&
        java    -Dfile.encoding=UTF-8 \
          -Dmockserver.initializationJsonPath=$${JSON_INIT_FILE_DIR}/static-k8s-expectations.json \
          -Dmockserver.logLevel=OFF \
          -Droot.logLevel=OFF \
          -jar    $${MOCKSERVER_JAR} \
          -serverPort    $${MOCKSERVER_PORT_K8S}&
        java    -Dfile.encoding=UTF-8 \
          -Dmockserver.initializationJsonPath=$${JSON_INIT_FILE_DIR}/static-registry-expectations.json \
          -Dmockserver.logLevel=OFF \
          -Droot.logLevel=OFF \
          -jar    $${MOCKSERVER_JAR} \
          -serverPort    $${MOCKSERVER_PORT_REGISTRY}&
        java    -Dfile.encoding=UTF-8 \
          -Dmockserver.initializationJsonPath=$${JSON_INIT_FILE_DIR}/static-okta-expectations.json \
          -Dmockserver.logLevel=OFF \
          -Droot.logLevel=OFF \
          -jar    $${MOCKSERVER_JAR} \
          -serverPort    $${MOCKSERVER_PORT_OKTA}&
        java    -Dfile.encoding=UTF-8 \
          -Dmockserver.initializationJsonPath=$${JSON_INIT_FILE_DIR}/static-sumologic-expectations.json \
          -Dmockserver.logLevel=OFF \
          -Droot.logLevel=OFF \
          -jar    $${MOCKSERVER_JAR} \
          -serverPort    $${MOCKSERVER_PORT_SUMOLOGIC}&
        java    -Dfile.encoding=UTF-8 \
          -Dmockserver.initializationJsonPath=$${JSON_INIT_FILE_DIR}/static-azure-expectations.json \
          -Dmockserver.logLevel=OFF \
          -Droot.logLevel=OFF \
          -jar    $${MOCKSERVER_JAR} \
          -serverPort    $${MOCKSERVER_PORT_AZURE}
  postgres_stackql:
    image: postgres:14.5-bullseye
    hostname: postgres_stackql
    volumes:
      - ./vol/postgres/setup:/docker-entrypoint-initdb.d:ro
      - ./vol/postgres/dev/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=stackql
    ports:
      - "7432:5432/tcp"
  postgres_external_data_source:
    image: postgres:14.5-bullseye
    hostname: postgres_external_data_source
    environment:
      - POSTGRES_PASSWORD=stackql
      - POSTGRES_USER=stackql
    ports:
      - "8432:5432/tcp"
